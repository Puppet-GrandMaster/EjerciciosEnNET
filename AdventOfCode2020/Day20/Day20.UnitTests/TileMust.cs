using System;
using System.Linq;
using System.Collections.Generic;
using Xunit;
using AdventOfCode2020.Day20.Logic;

namespace AdventOfCode2020.Day20.UnitTests
{
    public class TileMust
    {
        private const string TILE_2311 = @"Tile 2311:
..##.#..#.
##..#.....
#...##..#.
####.#...#
##.##.###.
##...#.###
.#.#.#..##
..#....#..
###...#.#.
..###..###";

        private const string TILE_1951 = @"Tile 1951:
#.##...##.
#.####...#
.....#..##
#...######
.##.#....#
.###.#####
###.##.##.
.###....#.
..#.#..#.#
#...##.#..";

        private const string TILE_3079 = @"Tile 3079:
#.#.#####.
.#..######
..#.......
######....
####.#..#.
.#...#.##.
#.#####.##
..#.###...
..#.......
..#.###...";

        [Fact]
        public void LoadDataCorrectly()
        {
            var sut = new Tile(TILE_2311);

            Assert.Equal(2311, sut.Id);
            Assert.Equal("..##.#..#.", sut.Top);
            Assert.Equal("...#.##..#", sut.Right);
            Assert.Equal("..###..###", sut.Bottom);
            Assert.Equal(".#####..#.", sut.Left);
        }

        [Fact]
        public void RotateRight90DegreesCorrectly()
        {
            var sut = new Tile(TILE_2311);

            sut.RotateRight(90);
            Assert.Equal(".#..#####.", sut.Top);
            Assert.Equal("..###..###", sut.Left);
            Assert.Equal("..##.#..#.", sut.Right);
            Assert.Equal("#..##.#...", sut.Bottom);
        }

        [Fact]
        public void FlipHorizontallyCorrectly()
        {
            var sut = new Tile(TILE_2311);

            sut.FlipHorizontally();
            Assert.Equal("..###..###", sut.Top);
            Assert.Equal("..##.#..#.", sut.Bottom);
            Assert.Equal(".#..#####.", sut.Left);
            Assert.Equal("#..##.#...", sut.Right);
        }

        [Fact]
        public void FlipVerticallyCorrectly()
         {
            var sut = new Tile(TILE_2311);

            sut.FlipVertically();
            Assert.Equal(".#..#.##..", sut.Top);
            Assert.Equal("###..###..", sut.Bottom);
            Assert.Equal(".#####..#.", sut.Right);
            Assert.Equal("...#.##..#", sut.Left);
         }

        [Theory]
        [InlineData(TILE_2311, TILE_1951)]
        [InlineData(TILE_2311, TILE_3079)]
        [InlineData(TILE_1951, TILE_2311)]
        [InlineData(TILE_3079, TILE_2311)]
        public void Test1(string tileData, string adjacentTileData)
        {
            var adjacentTile = new Tile(adjacentTileData);
            var sut = new Tile(tileData);

            Assert.True(sut.CouldBeAdjacentOf(adjacentTile));
        }

        [Fact]
        public void Test2()
        {
            var nonAdjacentTile = new Tile(TILE_3079);
            var sut = new Tile(TILE_1951);

            Assert.False(sut.IsAdjacentOf(nonAdjacentTile));
        }

        [Fact]
        public void Test4()
        {
           var flippedAdjacentTile = new Tile(TILE_2311);
           var sut = new Tile(TILE_3079);
           sut.FlipHorizontally();

           Assert.True(sut.IsAdjacentOf(flippedAdjacentTile));
        }

        [Fact]
        public void Test5()
        {
            var flippedAdjacentTile = new Tile(TILE_2311);
            var sut = new Tile(TILE_3079);

           Assert.True(sut.CouldBeAdjacentOf(flippedAdjacentTile));
        }

        [Fact]
        public void Test6()
        {
            var nonAdjacentTile = new Tile(TILE_3079);
            var sut = new Tile(TILE_1951);

            Assert.False(sut.CouldBeAdjacentOf(nonAdjacentTile));
        }
    }

    public class MapMust
    {
        private const string PUZZLE_DATA = @"Tile 1091:
..#.##.##.
.........#
#.#......#
.###..#...
#.#.......
##......##
......#..#
#.#....#..
#...#....#
#####....#

Tile 3691:
#.####..#.
...##...#.
##...#..#.
.#....##.#
#..#...#..
#.##....##
#.####....
#..#.....#
.##.#...##
#.#.#.#..#

Tile 2069:
...####..#
.#...#...#
#...#....#
...##..##.
.#......##
.#....##.#
#..##.....
.##...#..#
.#....#...
####....##

Tile 2969:
#...#.#.##
#.#....#.#
.......#.#
#...#...#.
#.....#.#.
#.........
..#...#..#
...##..#.#
#........#
#.##...###

Tile 3413:
##.##..#.#
#.#......#
#.#.#.#...
.#.......#
..........
.....###.#
....#....#
#...#.....
..##.#..##
..#.#..##.

Tile 3943:
..#####.##
#.....#...
.........#
##.#.....#
###.##....
.##.....##
#...#.....
..#.#....#
...#.....#
...#.#.#..

Tile 1163:
.###..#.#.
#..#.#...#
#.........
..#...#...
....###..#
....#..##.
.......#..
..#..#...#
...####.#.
.#########

Tile 2179:
.#.##.#.#.
#.#...#.#.
#...#...#.
##.#..##..
.###...##.
#..#.#....
..##.....#
......##.#
#...#...#.
.##..##.##

Tile 3539:
#.##..#...
#.....#...
#.#......#
#..##..##.
####....##
.#..#..#..
#.#....#..
#.....#..#
#.#..#....
####.#..##

Tile 2749:
.#....#.##
#...#....#
#...#.....
.###.#.##.
......##..
..#.#.#...
#.#..##..#
##..#...##
..####..#.
.###..#.#.

Tile 3701:
...###...#
..........
..#.....#.
.......#..
#..#.#...#
#......#..
##.##.#.##
........##
......#..#
#..#......

Tile 3881:
####..#..#
#..#.....#
#...##..#.
#.....#...
#..#..###.
###.#.##..
..##.#..#.
##...#####
.....#..#.
.##....###

Tile 3061:
###...###.
.....#...#
#.........
......#..#
.#.......#
#.....#...
.......#.#
#.......#.
#.#..#.###
..###.#...

Tile 1861:
#.#....#..
.....#...#
...#.###..
##.......#
..##.....#
#...##...#
..#.#.....
#....#..#.
###..#...#
#.#..#.#.#

Tile 2689:
##..####.#
#.###....#
...#.#...#
.....#.#.#
...#.....#
..##.....#
#.##......
#.#.#...##
.........#
..###.#.#.

Tile 1693:
#.#.####.#
#.#.#....#
#...###...
..........
.#..##.##.
####....##
.#......##
..#.#.....
.#.....#..
###.###.#.

Tile 3607:
##..##.#..
#...##....
..#..##..#
.....#...#
....#..###
##.......#
#....#.##.
....#.....
.#....#.#.
.##.#.####

Tile 1879:
#.#.###..#
..........
.#.#....##
......#..#
#.#..###..
..#....###
#..##.....
.........#
#......#..
.###..#..#

Tile 2027:
##.#......
#..##..#..
..##..#...
###.#....#
..#.###...
#..#......
#.....##..
#.##......
#..#.#...#
##....#...

Tile 3727:
####...#.#
#.#.#.....
##.......#
......##.#
..###.....
...#..###.
.#.#.##...
.#..#..#.#
#........#
.##......#

Tile 1451:
..##.#...#
.##.##....
.....#....
......##.#
.........#
...#.#....
#.##.#...#
.#..###...
#...##....
#.#..#..##

Tile 1423:
##....#...
#...##....
#...#..###
.#.#...#.#
#..#..#..#
....#....#
.#.#......
...##.#.##
#...##.#.#
#.#...#..#

Tile 2029:
#.#...##..
#........#
.#.......#
##.####.##
#.#..#.#..
..#.....#.
.....#.###
#.#......#
..#...####
..#...#..#

Tile 1093:
#...#..###
##.......#
..##...#.#
#....#...#
#.#.##..##
##..##....
.##..#.#..
..#.....##
......#.#.
####.#.#..

Tile 2393:
.###..#...
#..#...##.
.#...#...#
#.......#.
##.#.....#
##.##.#..#
........##
#..#.##..#
..#....#..
..#..#.###

Tile 3299:
.#.#.#.##.
.#...#....
#........#
....####.#
.#.....#..
#.#.###..#
.###.#.#..
...#..####
###.#.....
####....#.

Tile 2713:
.#####.#.#
#.##.#...#
###...#...
.#.....#.#
##.....##.
........##
##.#..##..
#.###...##
#.#..#...#
..#.###...

Tile 2609:
...#...##.
#.....##..
..#..#..#.
##.#.##..#
#..#.#....
##..###.#.
.#......##
#..#.#.#..
....#.....
##.##.####

Tile 3251:
.#.###.##.
...#.....#
#.#.##...#
#...#.#...
##..#..#.#
#.#.......
#......#..
#...#.#...
##.#.#.#..
#.#.#....#

Tile 1697:
...##.#...
#.#....###
#......#..
..#...#.#.
.#......#.
#..##.#..#
####...#.#
##..##..#.
#.#..#..##
###.##....

Tile 1399:
#..##.#.##
...#..#..#
#....#....
.#.......#
#....##.##
......##..
......#..#
.....##...
.###...#.#
..##.##...

Tile 2897:
#.#.###.##
#.....#..#
#.#...#.##
#.#......#
#..#..#..#
..#..#...#
#........#
..####..#.
##..#..#.#
.###.###.#

Tile 3163:
#..#.#.#..
.........#
..........
##...#.#..
#........#
.#...##..#
#.##.#..##
##..#.#...
...#.....#
........##

Tile 2699:
.#..##....
...###....
..#......#
##.....#.#
.#.##...#.
##.......#
........#.
##..#.#...
#.#.#.#...
#..##..#.#

Tile 2377:
.##.#.#..#
......#...
#..#...###
.......#.#
...#.#...#
#.....#...
#..##...#.
.#.....##.
..##.....#
.#.#....##

Tile 2473:
##.##.#.##
#.#.....#.
.....#...#
.......##.
#....#....
.#.##...##
#...#.....
.........#
........#.
.#.####.##

Tile 2447:
.###.####.
.......#..
.#....#...
#...#....#
...#.#....
#....#....
.....##.##
.....#...#
##..#..#.#
.#####..##

Tile 2671:
##..##..#.
...#......
.......#..
..#..#...#
....##.##.
##.#...##.
..#.......
#....##...
...##..#..
###..###.#

Tile 2333:
#.#.###...
#.#.#.....
....##..#.
#.....#..#
##.......#
#...#...#.
..####...#
...###....
.#....#...
.....#..##

Tile 3329:
#.##.###..
.#..#...#.
#...###.##
.#...#.#..
#.#...#...
..#......#
#.........
.......#..
##.#.#....
##..##.#.#

Tile 1301:
#..#.##.#.
##.......#
.###...#..
#.##......
#...#.....
........##
#..#..##..
...##....#
........#.
...#.####.

Tile 2129:
..#......#
#...#...##
...#.....#
.#..##....
#........#
.........#
..#....#..
#......#.#
##...#..#.
#.#.#.#...

Tile 3373:
...##.##.#
..#.....##
#.#......#
.#..#..#.#
#.#.......
##....#...
..##......
...#......
#..##..#..
#.#.#.#..#

Tile 3527:
.###.#..##
......#..#
##.#......
....#.....
#.##..#..#
#..#..#..#
#...##.#.#
......#...
#.#...#..#
..##.....#

Tile 1381:
#...##..#.
.#........
.##..##.#.
#.####....
..#..#.###
.####.##..
.#.##.....
......#..#
.#....#.##
#.###..#..

Tile 3011:
..#.##.##.
...#.#...#
..#.##.###
........#.
#........#
..#.#.##.#
##.#......
#..##...##
#...#...#.
..##.....#

Tile 2089:
.###.###.#
##.#.###..
..##.#.###
......#...
....#..#.#
#..#...#.#
#.#..#..##
.....#.###
#...#....#
.##..####.

Tile 3371:
###.......
##..#..##.
.........#
##.....#.#
##...#...#
..........
.....#..#.
.......##.
.....#...#
...#.##.##

Tile 2633:
###..##...
#.......#.
#......##.
...##.....
.#..#....#
#...###.##
...##.....
#...#....#
#.###...#.
.#####...#

Tile 1597:
#..#..#...
#......#.#
.....#....
..........
...#..#...
.........#
.#..#...#.
.#.#......
..........
.##.#..###

Tile 1361:
#..##.###.
.###..#...
#..#......
##.....#.#
..#...#..#
.#....##..
.#...#..#.
..#.....##
..##....#.
##.#.#..##

Tile 2273:
.......#.#
#..#......
#.....#..#
......#..#
#...##....
.#..##....
##.##....#
......##..
...#..#.##
##.#.##...

Tile 2297:
#.#.#.....
#.#.#..#.#
##.##.#.##
..........
#.#..###.#
##....#.##
#......###
....#..#.#
#....#..##
##..#.#.##

Tile 3989:
#.#...#...
#.#####.#.
.........#
........##
##..###...
...##..#.#
#..##..#..
...#......
......#..#
..#.#..###

Tile 1499:
.###.##..#
#..#.#..##
...##...##
#.....#.##
#.#.#..#..
.....#....
#.#..#.#..
.....#...#
#..##.....
#....####.

Tile 1997:
#....#.#..
##.......#
.#.......#
#.###....#
........#.
.........#
..#..##.##
#..#......
...###....
##.#..#.#.

Tile 3517:
....#..###
#........#
#.........
##..#....#
.........#
...#.....#
..#.......
#.###....#
#.#..#...#
..#.##.#.#

Tile 1901:
#.###....#
#......#..
#.....#...
#......#..
.#.....#.#
###.#.....
#.#....#.#
#........#
...#.#...#
#####.....

Tile 2417:
##..#...#.
.....#...#
.##......#
......#.##
.........#
#...#...#.
#...#..#.#
.......#.#
###...#..#
..#.###..#

Tile 2311:
.#..#.##..
......##..
#....#....
......#.#.
.#.#......
#...#.##.#
....#..#.#
..#....###
##...#.#.#
.#.......#

Tile 3671:
#....#..##
##...#.#.#
#.....#..#
.....#...#
#....##.##
.........#
##...##..#
#..##...##
.##.###..#
#.#...#...

Tile 3391:
##.##.##..
#..#.##...
####..#..#
#..#.....#
.#.#..##.#
#.........
#..#.##.##
..##..###.
.....#...#
..#......#

Tile 1783:
##..#.#..#
.#..##...#
#.#....#.#
....#...##
........#.
#..##.....
#.##...#..
##......##
..#.#.#..#
#.....###.

Tile 3257:
##.####...
.#...#....
.....#...#
#...##.##.
........##
...#.####.
......##.#
..###....#
.#.......#
##.#..##.#

Tile 1217:
...##.#...
....#...##
.#..##....
.........#
####....#.
##..#....#
#.#.##...#
.........#
........##
##...##.##

Tile 1049:
...#....#.
.##......#
..#...#...
.#...#..#.
##..#..###
##..#..#..
..#....##.
.....#..#.
#.........
.####.#.#.

Tile 3617:
.#######.#
##......##
.#...#.###
...##.....
##........
...#..#...
#..#.....#
.........#
.......#.#
##...#.##.

Tile 1619:
..###..##.
#.....#...
###....#.#
..#..#....
#..#.#..##
.#.......#
#.#.....##
#......#.#
.......#.#
..#...#...

Tile 1213:
##..#.#..#
#.#..###.#
#.#...##.#
.#...##..#
#.#..#..##
.#...#.###
...#...#..
#...#...##
##.#...#..
.#..##.#..

Tile 3181:
#######.##
..#......#
#.........
....#.#.##
......###.
##...#...#
....#.....
.#.......#
.#.......#
#.##.#.#..

Tile 1721:
#.#.###...
....#...#.
....##.#..
#...#.....
..###.....
#......#.#
#...#....#
#..#......
..#..##..#
##..##.##.

Tile 2953:
#.##.###..
.........#
..#....###
..#.#...##
...#..##.#
#.....#..#
.#...#....
.......#.#
#........#
##...#..#.

Tile 1459:
.....#..##
##...#..##
......##..
##.#...#.#
...#......
....#...##
..##.....#
#.#.##....
...#......
..#.##.#.#

Tile 2683:
###.#..#.#
..#..#..##
..#.#.#..#
..#.......
..#......#
#....###.#
........#.
#...#....#
.....#....
.#..#.#.##

Tile 3253:
.#..#..#..
...##....#
..........
##.#.....#
##.....###
....##...#
....##...#
..#.###.##
#..#.##..#
..###...##

Tile 3947:
.#..##.##.
..#.......
........##
..##..#...
.#.......#
...#..#..#
.#.#....##
#..#..###.
.....#.#..
##.#.....#

Tile 2887:
#.....#.#.
#...#...#.
.#...#...#
.........#
##..#.....
#.........
..........
#.#......#
#......#.#
.##......#

Tile 2141:
..#.#####.
#.........
.......#.#
...#..#..#
.#...##...
##.##...##
..#......#
.##.##..#.
#...##.#.#
..##...#.#

Tile 3793:
#.##...#.#
#..#..#.#.
..#..#..##
##.#....##
.###.#....
#....#...#
#........#
#....#..##
#.......##
#...###..#

Tile 2213:
#.####.#..
..###...#.
##..#.....
..##..#..#
.#..#..#..
...#..#.#.
....#.#...
##..##...#
.........#
...#..#.#.

Tile 3301:
#..###.###
##..###...
#..##...##
#........#
.....#....
#...###.#.
.........#
..........
..#.#.#...
#...#.#.#.

Tile 3923:
.#.###..#.
........#.
........##
#......#..
#.#..#...#
#.#......#
...#......
##....#...
#..#...#.#
#..##...#.

Tile 1747:
.##.#.#.#.
.#..#....#
#.#####...
#.....#..#
..#.#....#
..#.....#.
#..#.#...#
#.#.....##
#......#.#
..#...####

Tile 2003:
##..######
.##..#.#..
.#...#...#
#.#.#..###
#.#.#.....
..#.###.##
#..#....##
#...#.#..#
...#.....#
.#####...#

Tile 3559:
.##..##...
#.#.......
....#..#.#
..#......#
#...#.....
..........
###...#...
....#....#
.#.###..##
###...####

Tile 1889:
#.#....##.
#....#...#
#.#...#..#
.......#..
#....#.#.#
....#....#
#.##......
#....#....
#....#...#
...##..#..

Tile 2083:
#..####...
.......#.#
#.#...#..#
...##....#
#.#.#....#
#.......##
.#...#...#
..#.......
.##.#.....
#..#.#.#..

Tile 2087:
##.###.##.
.........#
...#.#..##
#....#...#
#.#..#.#..
...#....#.
#.........
..#..#....
...#......
##.#..#.#.

Tile 1523:
....##.#.#
...##.....
#...#..#..
#.#...##.#
#........#
#...#.##.#
##....#...
...##...#.
#..#####..
##...#.###

Tile 1283:
#######.#.
.#.#......
.#.......#
#..#....#.
.#..#...#.
#.#..#..##
#.........
...#....#.
#...#.....
.####.###.

Tile 3067:
..####.#.#
#.#....#.#
#....##..#
.....##..#
##..#.....
#.#...#.#.
#.....#...
...####...
#.......#.
#.#..##..#

Tile 2267:
#.....#...
###.#...#.
...##.....
#..#..#..#
......#...
#..#.....#
##..#....#
#...#...#.
...##....#
###..##...

Tile 2909:
..#...#.##
.....###..
#........#
#..#...#..
#........#
.........#
#...#.##.#
....#.....
..#...#..#
#..#.#...#

Tile 3583:
.#.#.####.
.#..#..#.#
##...##...
......#...
.#.###..##
#....###.#
#.##..#..#
###..#.###
.##..##...
..#..#####

Tile 2221:
.##.###...
..#..#....
..........
###......#
#....#...#
#...##....
#....#...#
###.#.#..#
#...#.#..#
..#..##.##

Tile 2237:
##..##.#.#
#...#....#
#.#......#
#.#...#..#
###..#.##.
#.###...#.
..##...#..
...#.....#
###.#.....
.###.#..##

Tile 1009:
#.#.#..###
#....#...#
#.........
...#.#...#
..###.....
#...#.....
..........
#.#...####
..#.#..#.#
.#.#.#.#..

Tile 1831:
..##.#..#.
....#.#.#.
.........#
.#........
.#..#.#.#.
......#..#
#.#.......
...#......
......#.#.
##.###.#..

Tile 2137:
..##.#.#.#
..##..#.##
.#..#.....
#..#.#...#
.#...#..#.
.#...#.###
#.#...#..#
.....#...#
#......#..
.#...#...#

Tile 1669:
..#..#.###
#.##.###..
.#........
.#.....###
#......#..
###......#
#..#.#....
###...##.#
#...#...##
#......#.#

Tile 2341:
.###.#....
#.........
#..##.....
#.#......#
...#....#.
.........#
#.#.#.....
......####
.#.#....#.
.#.###.#.#

Tile 2243:
...#...#..
..#.#.#..#
#....#....
#....#....
##...#....
........##
#.#...#..#
..#......#
#.....#...
#####....#

Tile 3319:
..#####.#.
....###.#.
##...##...
.###.#.#..
...#..##..
##.#..#..#
...#...###
.##...#.#.
..##.##..#
###.....#.

Tile 3803:
.##..####.
#.##.....#
###.....##
###....##.
##.#..#.#.
#..###...#
####..#.##
...#......
..#.......
###..#####

Tile 3217:
#.###....#
.#.......#
..#.#...#.
.....#..##
..#......#
#..#..#.#.
#.........
.......##.
#........#
##....#.#.

Tile 2389:
..#..###..
..#....#..
..##....#.
..#......#
#..##...##
...#....##
#.....##.#
..........
.....###.#
##.##.##.#

Tile 1367:
#..##...#.
##..##.##.
#..#.....#
##....#..#
.#.#..#..#
#.#..#..##
##....##.#
#...##.#.#
..#.......
..#.#.##.#

Tile 3593:
.##...##..
......#.##
..#.#.....
..........
##...#...#
.#.#..#..#
....##...#
#.#......#
..####...#
####.####.

Tile 2551:
#..##..##.
#.#..#...#
.....#...#
#..#.#..#.
.....##.##
.#....#...
......#.##
#....#.###
#.#.#....#
.#.###.##.

Tile 3623:
.#.###..##
.#.#...#.#
##...##...
##...#...#
....##....
#...#..#..
.#.....###
#.##.....#
.....#.#.#
#.###..###

Tile 1999:
#.#..####.
...##...#.
#...#..#..
.#..##..#.
#.#.#.....
....#.....
......####
#..#..##.#
.#..##....
.#...###.#

Tile 3169:
.#.#.###..
........##
#.........
#.....#...
.#.#..#.##
#.........
#####...#.
...#....##
......##..
.#..#...##

Tile 1951:
##.#....#.
#...##..#.
##.#.##.#.
#....#.#..
#...#..#..
.##..#...#
...####...
...###.##.
#.#.......
..#..#..##

Tile 2617:
#.##.#...#
.#........
.#.##....#
#........#
.#.#.#....
.....#...#
#.........
#..####.#.
......#..#
###...#.##

Tile 1559:
##.#...#..
#........#
.#...#....
#.........
##..#.#.##
......#...
.#..#....#
.....#....
##.#.##...
##.###.#..

Tile 3407:
.#..#####.
##.#.#.#..
#.....#.##
.....##...
.###.#...#
...#.##...
.##.....#.
....##.#..
.#..###.##
..##.#..##

Tile 3613:
##...#.##.
###......#
......#.##
#....#.###
..###..#..
#..#.....#
.......##.
..#.......
....#.#..#
#.#.##.##.

Tile 2293:
#..###..##
#........#
....#.#..#
....#....#
#..###...#
#..#..#...
#..#.##.##
#.#...#..#
##.......#
..###.#..#

Tile 2789:
...#..####
#...#.#..#
.#.....#.#
........##
.....#..#.
#####....#
...#.#....
#..##..#..
......#..#
.####.##..

Tile 2857:
#.#.#..#..
##.#......
..#......#
#..####..#
..#...#...
....##...#
.#........
#..#.#...#
#.......##
##.#.#.#..

Tile 3767:
####.#..#.
.....###.#
....###.##
#..##....#
#..#....#.
#.........
....#.....
.#.###.#..
#...###..#
###.###..#

Tile 1531:
##.#.#.#.#
...#.....#
..#.#..#.#
.....#....
....###.##
....#.....
.....#..##
#.##.#..##
.#..#.###.
##.#.##.##

Tile 3541:
##..######
..........
..##.#....
.#.#...#.#
#.#.......
#........#
.........#
#...#...#.
.....#...#
#.#..#.###

Tile 2957:
#.#.#..###
#..#....##
.#.......#
...#..#..#
..#.#....#
##....#...
.#....#...
#####....#
.####....#
.#...#..##

Tile 1249:
####.##.##
#...#..#.#
.#..#....#
#.#..#....
#....#..#.
##.......#
.....#..#.
.#..##.#..
#...#....#
.##.###...

Tile 3931:
#..###.##.
.......###
####.#.#.#
#.......#.
..#.#####.
#..#..#.##
....#..#..
#.#....#..
.#..#...#.
#.....###.

Tile 2731:
#...#...##
..##..#..#
#.........
##.##....#
#........#
#....#.###
##.......#
#..#.#...#
....#.#...
.##..#.###

Tile 1609:
.#...##.##
#...#...#.
#.##....#.
#...#.....
.#....#..#
#.#......#
..##.....#
#......#..
#.........
#####..##.

Tile 2579:
#.###..#.#
.##..#....
...#.....#
##.....#.#
.#.#..#..#
....##...#
#...#..#.#
#.....##..
#..###...#
..#.#..#.#

Tile 1993:
.#..##...#
#...####..
#......###
.#.....###
..#.#.....
...#...#.#
#.####..##
#.........
#....#.###
####..#..#

Tile 3229:
.#.####.##
##...#...#
......#...
#.....#.##
..#...##..
#...#.....
.........#
#....#.#.#
...#.....#
..########

Tile 3469:
.##....#.#
#......###
.#.#.....#
#.#.##....
#.##....##
....#.#..#
......#...
.#.#.##...
.#.#.##...
#..######.

Tile 3529:
.#######..
#..#.....#
...###....
....#.##.#
..........
...##.....
###..#...#
#..#.#..##
#.........
#..##.##.#

Tile 2999:
#...#..#.#
.......#..
...#......
.##...#...
##.#.....#
.#...#....
.##......#
.#..##.#..
##.#...#..
##..#.####

Tile 3853:
.#.##.####
#..#......
..#.....##
.####....#
...#....#.
##..#...#.
##.....#..
#..#.#....
#.###.....
##..####.#

Tile 3917:
#.#..#....
..###.##..
..##..#...
..###.....
...#......
.........#
##.#......
..##.#....
#.#.......
#.##.##..#

Tile 1489:
.##....###
#...#.....
......#...
.......###
##..#..#..
#..#....#.
#...#.##..
...#.....#
##.#.#..#.
.##.#.##.#

Tile 1051:
#....#.##.
.##..#..#.
...##....#
#..#.#....
#....#.#.#
.........#
.#.......#
.#.##...#.
#......#..
####.###..

Tile 2357:
###.###...
#.........
...#...#.#
...#......
.#....#.##
#.....#...
#.#......#
...#..##..
..#..##.#.
##..##..#.

Tile 1709:
..####.###
#.........
...#.#...#
...#..#...
#..####...
....##....
......#.#.
.#...#....
..##.#..##
....#.#..#

Tile 2753:
...##.#..#
###....###
...#...##.
###...#..#
#...#.##.#
#..#....#.
#........#
#...##....
..#....###
.#####.##.

Tile 3863:
#.##.#..##
..#.#.#.#.
#.......##
##....##..
..##......
...###...#
...#.#..##
####.....#
...#....##
..###.#...

Tile 1787:
#.#...##.#
..........
...#.....#
#...#.....
...#......
###.....##
#.....##..
..##......
##.......#
##.#...#.#

Tile 1117:
..##.#....
.#...#.#..
..#.#....#
....#...#.
#..##.#..#
..#.#.....
........#.
#.#......#
##.......#
#.#..##...";
        private const string SAMPLE_DATA = @"Tile 2311:
..##.#..#.
##..#.....
#...##..#.
####.#...#
##.##.###.
##...#.###
.#.#.#..##
..#....#..
###...#.#.
..###..###

Tile 1951:
#.##...##.
#.####...#
.....#..##
#...######
.##.#....#
.###.#####
###.##.##.
.###....#.
..#.#..#.#
#...##.#..

Tile 1171:
####...##.
#..##.#..#
##.#..#.#.
.###.####.
..###.####
.##....##.
.#...####.
#.##.####.
####..#...
.....##...

Tile 1427:
###.##.#..
.#..#.##..
.#.##.#..#
#.#.#.##.#
....#...##
...##..##.
...#.#####
.#.####.#.
..#..###.#
..##.#..#.

Tile 1489:
##.#.#....
..##...#..
.##..##...
..#...#...
#####...#.
#..#.#.#.#
...#.#.#..
##.#...##.
..##.##.##
###.##.#..

Tile 2473:
#....####.
#..#.##...
#.##..#...
######.#.#
.#...#.#.#
.#########
.###.#..#.
########.#
##...##.#.
..###.#.#.

Tile 2971:
..#.#....#
#...###...
#.#.###...
##.##..#..
.#####..##
.#..####.#
#..#.#..#.
..####.###
..#.#.###.
...#.#.#.#

Tile 2729:
...#.#.#.#
####.#....
..#.#.....
....#..#.#
.##..##.#.
.#.####...
####.#.#..
##.####...
##..#.##..
#.##...##.

Tile 3079:
#.#.#####.
.#..######
..#.......
######....
####.#..#.
.#...#.##.
#.#####.##
..#.###...
..#.......
..#.###...";

        [Fact]
        public void Test1()
        {
            const string data = @"Tile 2311:
..##.#..#.
##..#.....
#...##..#.
####.#...#
##.##.###.
##...#.###
.#.#.#..##
..#....#..
###...#.#.
..###..###

Tile 1951:
#.##...##.
#.####...#
.....#..##
#...######
.##.#....#
.###.#####
###.##.##.
.###....#.
..#.#..#.#
#...##.#..";

            var map = new Map(data, 1, 2);
            Assert.Equal(2, map.Count);
        }

        [Fact]
        public void Test2()
        {
            const string data = @"Tile 2311:
..##.#..#.
##..#.....
#...##..#.
####.#...#
##.##.###.
##...#.###
.#.#.#..##
..#....#..
###...#.#.
..###..###

Tile 1951:
#.##...##.
#.####...#
.....#..##
#...######
.##.#....#
.###.#####
###.##.##.
.###....#.
..#.#..#.#
#...##.#..

Tile 3079:
#.#.#####.
.#..######
..#.......
######....
####.#..#.
.#...#.##.
#.#####.##
..#.###...
..#.......
..#.###...";

            var map = new Map(data, 1, 2);
            map.ClassifyEdge();
            Assert.Equal(2, map.Corners.Count);
        }

        [Fact]
        public void Test3()
        {
            const string data = @"Tile 2311:
..##.#..#.
##..#.....
#...##..#.
####.#...#
##.##.###.
##...#.###
.#.#.#..##
..#....#..
###...#.#.
..###..###

Tile 1951:
#.##...##.
#.####...#
.....#..##
#...######
.##.#....#
.###.#####
###.##.##.
.###....#.
..#.#..#.#
#...##.#..

Tile 3079:
#.#.#####.
.#..######
..#.......
######....
####.#..#.
.#...#.##.
#.#####.##
..#.###...
..#.......
..#.###...";

            var map = new Map(data, 1, 2);
            map.ClassifyEdge();
            Assert.Collection(map.Borders, p1 => Assert.Equal(2311, p1.Id));
        }

        [Fact]
        public void Test4()
        {
            const string data = @"Tile 2311:
..##.#..#.
##..#.....
#...##..#.
####.#...#
##.##.###.
##...#.###
.#.#.#..##
..#....#..
###...#.#.
..###..###

Tile 1951:
#.##...##.
#.####...#
.....#..##
#...######
.##.#....#
.###.#####
###.##.##.
.###....#.
..#.#..#.#
#...##.#..

Tile 1171:
####...##.
#..##.#..#
##.#..#.#.
.###.####.
..###.####
.##....##.
.#...####.
#.##.####.
####..#...
.....##...

Tile 1427:
###.##.#..
.#..#.##..
.#.##.#..#
#.#.#.##.#
....#...##
...##..##.
...#.#####
.#.####.#.
..#..###.#
..##.#..#.

Tile 1489:
##.#.#....
..##...#..
.##..##...
..#...#...
#####...#.
#..#.#.#.#
...#.#.#..
##.#...##.
..##.##.##
###.##.#..

Tile 2473:
#....####.
#..#.##...
#.##..#...
######.#.#
.#...#.#.#
.#########
.###.#..#.
########.#
##...##.#.
..###.#.#.

Tile 2971:
..#.#....#
#...###...
#.#.###...
##.##..#..
.#####..##
.#..####.#
#..#.#..#.
..####.###
..#.#.###.
...#.#.#.#

Tile 2729:
...#.#.#.#
####.#....
..#.#.....
....#..#.#
.##..##.#.
.#.####...
####.#.#..
##.####...
##..#.##..
#.##...##.

Tile 3079:
#.#.#####.
.#..######
..#.......
######....
####.#..#.
.#...#.##.
#.#####.##
..#.###...
..#.......
..#.###...";

            var map = new Map(data, 3, 3);
            map.ClassifyEdge();
            Assert.Collection(map.Corners,
                p1 => Assert.Equal(1951, p1.Id),
                p2 => Assert.Equal(1171, p2.Id),
                p3 => Assert.Equal(2971, p3.Id),
                p4 => Assert.Equal(3079, p4.Id));
        }

        [Fact]
        public void Test5()
        {
            const string data = @"Tile 2311:
..##.#..#.
##..#.....
#...##..#.
####.#...#
##.##.###.
##...#.###
.#.#.#..##
..#....#..
###...#.#.
..###..###

Tile 1951:
#.##...##.
#.####...#
.....#..##
#...######
.##.#....#
.###.#####
###.##.##.
.###....#.
..#.#..#.#
#...##.#..

Tile 1171:
####...##.
#..##.#..#
##.#..#.#.
.###.####.
..###.####
.##....##.
.#...####.
#.##.####.
####..#...
.....##...

Tile 1427:
###.##.#..
.#..#.##..
.#.##.#..#
#.#.#.##.#
....#...##
...##..##.
...#.#####
.#.####.#.
..#..###.#
..##.#..#.

Tile 1489:
##.#.#....
..##...#..
.##..##...
..#...#...
#####...#.
#..#.#.#.#
...#.#.#..
##.#...##.
..##.##.##
###.##.#..

Tile 2473:
#....####.
#..#.##...
#.##..#...
######.#.#
.#...#.#.#
.#########
.###.#..#.
########.#
##...##.#.
..###.#.#.

Tile 2971:
..#.#....#
#...###...
#.#.###...
##.##..#..
.#####..##
.#..####.#
#..#.#..#.
..####.###
..#.#.###.
...#.#.#.#

Tile 2729:
...#.#.#.#
####.#....
..#.#.....
....#..#.#
.##..##.#.
.#.####...
####.#.#..
##.####...
##..#.##..
#.##...##.

Tile 3079:
#.#.#####.
.#..######
..#.......
######....
####.#..#.
.#...#.##.
#.#####.##
..#.###...
..#.......
..#.###...";

            var map = new Map(data, 3, 3);
            map.ClassifyEdge();
            Assert.Collection(map.Borders,
                p1 => Assert.Equal(2311, p1.Id),
                p2 => Assert.Equal(1489, p2.Id),
                p3 => Assert.Equal(2473, p3.Id),
                p4 => Assert.Equal(2729, p4.Id));
        }

        [Fact]
        public void Test6()
        {
            var map = new Map(SAMPLE_DATA, 3, 3);
            map.ClassifyEdge();
            Assert.Equal(20899048083289UL, map.CornersMultiplied);
        }

        [Fact]
        public void SolveFirstPuzzle()
        {
            var map = new Map(PUZZLE_DATA, 12, 12);
            map.ClassifyEdge();
            Assert.Collection(map.Corners,
                p1 => Assert.Equal(3413, p1.Id),
                p2 => Assert.Equal(3607, p2.Id),
                p3 => Assert.Equal(3371, p3.Id),
                p4 => Assert.Equal(2617, p4.Id));

            Assert.Equal(108603771107737UL, map.CornersMultiplied);
        }

        [Fact]
        public void Test7()
        {
            var map = new Map(SAMPLE_DATA, 3, 3);
            map.ClassifyEdge();

            Assert.Collection(map.Corners,
                p1 => Assert.Collection(p1.InnerSide.Keys,
                    s1 => Assert.Equal("#.##...##.", s1),
                    s2 => Assert.Equal(".#####..#.", s2)),
                p2 => Assert.Collection(p2.InnerSide.Keys,
                    s1 => Assert.Equal("####...##.", s1),
                    s2 => Assert.Equal(".#..#.....", s2)),
                p3 => Assert.Collection(p3.InnerSide.Keys,
                    s1 => Assert.Equal("#...##.#.#", s1),
                    s2 => Assert.Equal("...#.#.#.#", s2)),
                p4 => Assert.Collection(p4.InnerSide.Keys,
                    s1 => Assert.Equal("..#.###...", s1),
                    s2 => Assert.Equal("#..##.#...", s2)));
        }

        [Fact]
        public void Test8()
        {
            var map = new Map(SAMPLE_DATA, 3, 3);
            map.ClassifyEdge();
            Assert.Collection(map.Borders,
                p1 => Assert.Collection(p1.InnerSide.Keys,
                    s1 => Assert.Equal("..##.#..#.", s1),
                    s2 => Assert.Equal("...#.##..#", s2),
                    s3 => Assert.Equal(".#####..#.", s3)),
                p2 => Assert.Collection(p2.InnerSide.Keys,
                    s1 => Assert.Equal(".....#..#.", s1),
                    s2 => Assert.Equal("###.##.#..", s2),
                    s3 => Assert.Equal("#...##.#.#", s3)),
                p3 => Assert.Collection(p3.InnerSide.Keys,
                    s1 => Assert.Equal("...###.#..", s1),
                    s2 => Assert.Equal("..###.#.#.", s2),
                    s3 => Assert.Equal("####...##.", s3)),
                p4 => Assert.Collection(p4.InnerSide.Keys,
                    s1 => Assert.Equal("...#.#.#.#", s1),
                    s2 => Assert.Equal("#..#......", s2),
                    s3 => Assert.Equal("#.##...##.", s3)));
        }

        [Fact]
        public void Test9()
        {
            var map = new Map(SAMPLE_DATA, 3, 3);
            map.ClassifyEdge();
            map.ReformEdge();

            var reassembledMap = map.GetReassembledMap();
            Assert.Equal(1951, reassembledMap[0,0].Id);
            Assert.Equal(2729, reassembledMap[0,1].Id);
            Assert.Equal(2971, reassembledMap[0,2].Id);
            Assert.Equal(2311, reassembledMap[1,0].Id);
            Assert.Equal(1427, reassembledMap[1,1].Id);
            Assert.Equal(1489, reassembledMap[1,2].Id);
            Assert.Equal(3079, reassembledMap[2,0].Id);
            Assert.Equal(2473, reassembledMap[2,1].Id);
            Assert.Equal(1171, reassembledMap[2,2].Id);
        }

        /*[Fact]
        public void Test10()
        {
            var map = new Map(PUZZLE_DATA, 12, 12);
            map.ClassifyEdge();
            map.ReformEdge();
            map.Crop();
        }*/


        [Fact]
        public void Test11()
        {
            const string finalMap = @"Tile 9999:
.#........##...........#......#...#.....#.#..#...#...##........#...##....#.#...#..##....##..#..#
.#.#.#......#....#.##.#...##.##...###....##......##...#.....#.#.....##..##....#.......#.........
#........#..#.#...#...#...#.#.#....#.##.....##.##...#......#...........#.#..#...#.#....#.#.....#
............#.......#.###.#.##.............##..#...#..........#.....#....##.#...#...###....#...#
....###..#.#..#...#...#...#.#..#..##.......##........#.......#.........#.....#.#....####........
...#.........#.#.....##......##.##..#.....#......#.#.#.#...#.....#......#.#...........###..#....
...#......##...##...........##.#..#.#..#..#............#.#......#.##.#.....#.......#....##......
.##.#..#..#.#..#.#.#....#..#.#.#.............#........#..#.#.##..........##........#..#....#....
..#..#....#..###.....#...#............#...#.#......#.......#...#.#...##....#.#.#.....#.###......
#............#..#.....#...###.##...#.##......#.#...#.....##....#..#.#..................#.##.....
...#.....#.....#....####..####.......#.#.###.#.......##....#.........#.##.......#....#...##..##.
#.........#...#.#....#..##..#.......................#...#....#.....#....#..#.#.##...#..#...#..#.
.####....##....##...#..#...#..#......#..#........#.#.....#...........#.......#..#..#..#.........
...#....#..#...#.#.....#....#.#.....###..#.#.#...#.......##........#.#...#...................#..
.#..#.#.#.....#....#.#..#.#.##.#..#..##.##........#...#.......#..#........#.....#....#...#...#..
#......##....##.....###....##..#.##.###..##...#....#.................#.......#.#....#.......#..#
............#..#....###.....#......##.....#...##......##.##.#....#.##...#.#.##........#..#..#...
...........#..#....#.#......#....#....##.#......#.#.....#.#..#.#...#.#......#...#....#......#...
#..#..........##.#.#....##.#.###....#..#.#..#....#.##.....##.......#....#..#.......#........###.
........#....#.#.....#...##......#...#.##...#....##....#.#.#....##..##.......#....#.#...#...#.#.
..#......#..###......##...#.#.#....#.#.#...........#.#..##.......#...#..#..#.#.#....#......#.#..
.#...................##...##..#.#...#...#.#..........#.....#.#......................##.##......#
.###....#.##.#.##...#.#.#...#..#..............###.#.##....#...##........#...#.......#....#....#.
.#..#....#.#..#.........#..####.#..........#....#.#.##..##..##.##..#...#........#..#..#...##....
..#.......#....#.......#...#.#..#.#.#.#.####......#.###........##........###....#...........###.
.#.##..........#.....................#.#####....#.#..###..#...#..#.#.##..........#.........###.#
.##.....#......#.....#....#...#.....##..#....#...####..#...#..##.#..#....#...#....###.....##....
...#...#........#.#..#.#..###...###.#...#....#.....#....#...#...##..................###...#....#
..#......#.#..#.........##..#.....#.##...#.#.......#.....##...##.#.#..............#.#...........
#.#...#.#..####.####...#.#......##.....#..#..#....#.#........#.#....#.##.##.#....###..#....#....
.....##.....#..#..#....#...#..#....##.#.#............#...#.##.###...........#...........#.###.#.
#...#..#...#.........##.#.####..#..###.#..#....#..#.###..##...#..#....#...#...#...#........###..
#....#..##..#..#...........#..#.#.#.........#....#..#....##.#.........#............##.....###..#
..###...##.#...#.#......#...........##..............#...##...#..........#.....###.#.#.#.#...##..
.####.....##.......#...#.#.#.#.##..#...#..#.#.....#.#..##.....#.#.#.#.....#.........##..........
...#...#......#...#.....#.##.#.##..#.....###........##.##.....#####.........#.#....#.#.....#....
#..........#..#..##..#........###..###.....#....#....#.........#...#...#......#.#.......#.###...
.....#...#..#...#...#.#.......#.#...###..............#.##.#..##.....#....#.#...#.#.....#........
...##..##.#....###....#........##........#...###....#.##.###...#.......#..#..#....##.#..........
.#.#....#.#.............#....#.#...#.....#.#..#..#.#.....#..#..........#..######....##....#.#.#.
...#...##.###...#...#..#...#.###....#...#.........#.....#.....#..#.......##..#.....###........#.
...##.#...##...##.###....#.....##..........#.....#.##......#...#...##.#..........##........##...
...#.....#.#.###.#.#...#...#...#....#..........#...#.#..........#....##.#.##.....#..#.....#...#.
.###.....##..#....#...#...##.##.....##......#...#..#..#.#.##.....#..#..#...........##.....#.....
......#...#..#.#......#..#.##..#.#.#....#.....#..#.......#....#.#.#..#......#.##..#..#.#....#...
...#....##...#..........#.....#..........###..........#..##...#.#....#..#........#.....#....##..
..#.....#.#...##.#.......#....#...#........#..#....#.#..#.........#.......#.#........#..#..##...
.#..##....##.##....#.#.#.......##.#.#..#..#.....#.#.#.#.#....##.#..##.##...#.#.....#..##...#..#.
.#.#.....##...#.....#......#...###..#........#.....#........#.....#...#.#..#.#..#.....#.#.....#.
......#.....#..#......#.##...##.....#..##...##.#..#..#..#.#.....#....#......#.##.#...#.#.#..#.#.
..........###.....#...#...#.#....#.#.....#......#..#...#.#...##...#.....#.#.........##.....#..#.
#..#.....#..#..###.#..####.........##....###...##...#............#.......#......#.#.#..##.#.#...
.#........#.....#...###.......#..##........##....#..##..#........#..#......###.##...........#.#.
..........##.#...#...##.#.....###.......#.....#..#......##.##.........#......###.......#...##...
.......#.#.#.#.......#..#.........#.###.......#.#..##.#..#....#........##.##..##.#...#...##.#.##
#..........#........#.##.##.###.....#...###..#.....##...#...#..........#.#.##.....##..#.#..###.#
.......#..........#......#....#..#.#..#..##..#.###.#...#..#.....#...#....#.#.........#...#.#...#
.#.......#..##.......#.#..#.##..#.#.....#..#......##.....#.#..............##......#.#......##...
.....#....#...#.....#..........##.#.#.....#.#.....#..#.....#....##.#......#.#..#..##.....#..#.##
.......#..........#..##.#.##.#..##.#.##.#...#..#.....#..##.....#..#.#..#...#..#...#.#..#.###....
.#.#..###.#.......#..#..#.#...........#.#...#.##..#.....##.##...#.......###...#.#.#....#..#.##..
.......##...#....#.##..........#..#.##...#...#..#..#....#.#.......#...#..#.###.........#..#.##..
#.#..#...#........#.....#...#......#........#......#...#..........#.##...#.##...#..#.###.####...
.....#.#.#....#...#...#...#...###...#.........#...##.........#..#..#.#..###.#.#.#.#..##.##..##.#
##.#....#.......#...#..........#.....##......#.........#.....#.....##.#......#.#....###.#......#
........#..#..#.#...##....#..#...#..#..##.............##..#.......##.#.#......................#.
..#.##.....##........#.#.#.#...##.#.##.....#......##....#.....###.#.......##.#.......##.....#.#.
..#........#...#.##.#.#..#...#....#.#....#......#..#....##..#.##...#.....#.##.##..#....#..#...#.
.#........#.....................#..###.#.....#.....###.#.......#..#..#.....##.....##...####.#...
....#....#.....##.............#.#......#...#..#...##......#.##.##.#...#..###...#.#..........##..
.#.....#..##.#..##.##.#.......#...#.#.#............#.....##.#..#...#..##.......#.##....#..#.##..
##.......##..#.....#.#.....#..##...#.........##..###...#......#....##.........#..#....#...###...
....#.....##............#..#...#.#..#........#....#.....#.........#.#.....##.##.##.#..###.#.....
........#..#.#........#..#..........#..#..#.#..#...#.#..#..#.....##........###.......####.....#.
.....#....####....#..###.#....#....#..#.#..#.##...#....#.............##..#.........#.#...#.#..##
#........#.....#......#.........#..#......##...#.#.###.#...#......#.......#...#.#..#.......##..#
.....#......#...#......#...............#.........#.#.......#.###.#.###.....##....#.##.###..##.#.
......#.#.#...#...#........##..##..#.....#.#...#.#.#..###....#.###.#.............##.##.#...#....
.......#..##..#..#....#......#...#.##..#........#...#...#..#..#..##..#..##...#..#...#.#..#...##.
.#..#.####.#...#....#...#...#.......#...........##..#.#.#.#..#....##..#.#.###......#..#........#
..#....##.#..#....#........#.......#..#.....#.##.................#.....#...###..#...##.....###.#
###......#...##.......#.###..##...............#..##.#.....#.......#....#......#.#..#...##...#.#.
..#.#..#.....##...#...#.#.##.#........##...#...##.#...#....#......##.....#.....#.##....#....#...
..###.....#....##..................#....#........#........#.....##.....##...##.#.#...#..##.#..#.
.##.....#####..#...#...#.##..#.#...##.......#.#.........##.....#####..##.......##....##..#.#....
#....##.#.....#....#.........#.....#........##...............##..#...#..#..........####..#......
.......#...#.......#......#..###..#.#.##..#...#....#...#.##..........#....#.#..#.....#.....#...#
.#.#.#.#..#....#..#.#.#...##.#....#.#....#..........#...#.................#.#.#.#...#.##...###..
......#.#.#...........#.....#.#..##.....#...#...#..#..#.##.....................#.#..##......#..#
.........#............#..#.....#...##.##...#......#.#.#...#..#...#..#.....####.......#...#......
......##..####...#.....#..##......#.......##..##......#...#...###..#..#......#.......##.........
...##.#..#...#..#..........#..##..#.....#......#......#...#....#.........#...#.#..#....##..#..#.
.#....#....##.....#.#..#....#.##..##.#..#....##..###.........#.#.#..###.#..#..........#.###..#..
.#.#..#.#........#..#.....#.#.....#....#..##....#............#..............##...#..#..#.#.....#
..........#.#...##....#......##....#.#.###...#......#...............#.......##........#....#.#..
##.#...........#.....#.....##.#...#.##.##....#.....#.......#.#.....#..#..#....#.#.....#....#.#.#";

            var tile = new Tile(finalMap, 96);

            tile.FlipHorizontally();
            tile.RotateRight(270);
            tile.Display();
            Console.WriteLine("");
/*
            tile.RotateRight(90);
            tile.FlipHorizontally();
            tile.FlipVertically();
            tile.Display();
            Console.WriteLine("");

            tile.RotateRight(90);
            tile.Display();
            Console.WriteLine("");

            tile.RotateRight(90);
            tile.Display();
            Console.WriteLine("");

            tile.RotateRight(90);
            tile.Display();
            Console.WriteLine("");

            tile.RotateRight(90);
            tile.FlipHorizontally();
            tile.Display();
            Console.WriteLine("");

            tile.RotateRight(90);
            tile.Display();
            Console.WriteLine("");

            tile.RotateRight(90);
            tile.Display();
            Console.WriteLine("");

            tile.RotateRight(90);
            tile.Display();
            Console.WriteLine("");*/
        }
    }

    public class Map
    {
        private readonly string _data;
        private List<Tile> _tiles;
        private readonly Tile[,] _reassembledMap;
        private string[] _fullMap;

        public int Width { get; }
        public int Height { get; }
        public int Count => _tiles.Count;
        public List<Tile> Corners { get; }
        public List<Tile> Borders { get; }
        public ulong CornersMultiplied => Corners.Select(t => (ulong)t.Id).Aggregate((r, i) => r *= i);

        public Map(string data, int width, int height)
        {
            _data = data;
            _tiles = new List<Tile>();
            Width = width;
            Height = height;
            Corners = new List<Tile>();
            Borders = new List<Tile>();
            _reassembledMap = new Tile[Height,Width];

            ParseMap();
        }

        private void ParseMap() =>
            _tiles = _data.Split("\n\n").Select(t => new Tile(t)).ToList();

        public void ClassifyEdge()
        {
            var compatiblity = new List<int>();
            foreach (var tile in _tiles)
            {
                var tilesThatCanBeAdjacent = _tiles.Where(t => t.Id != tile.Id && tile.CouldBeAdjacentOf(t)).ToList();
                var emptyBorder = 4 - tilesThatCanBeAdjacent.Count;
                if (Width == 1 || Height == 1)
                {
                    if (emptyBorder == 3)
                    {
                        Corners.Add(tile);
                    }
                    else
                    {
                        if (emptyBorder == 2)
                        {
                            Borders.Add(tile);
                        }
                    }
                }
                else
                {
                    if (emptyBorder == 2)
                    {
                        Corners.Add(tile);
                        tile.MarkAsCorner(tilesThatCanBeAdjacent);
                    }
                    else
                    {
                        if (emptyBorder == 1)
                        {
                            Borders.Add(tile);
                            tile.MarkAsBorder(tilesThatCanBeAdjacent);
                        }
                        else
                        {
                            tile.MarkAsInsidePiece(tilesThatCanBeAdjacent);
                        }
                    }
                }
            }
        }

        public void ReformEdge()
        {
            foreach (var corner in Corners)
            {
                _reassembledMap[0, 0] = corner;

                if (corner.InnerSide.ContainsKey(corner.Right) && corner.InnerSide.ContainsKey(corner.Bottom))
                {
                    // acomodado
                }
                else
                if (corner.InnerSide.ContainsKey(corner.Right) && corner.InnerSide.ContainsKey(corner.Top))
                {
                    corner.RotateRight(90); // o flip horizontal
                }
                else
                if (corner.InnerSide.ContainsKey(corner.Left) && corner.InnerSide.ContainsKey(corner.Bottom))
                {
                    corner.RotateLeft(90); // o flip vertical
                }
                else
                if (corner.InnerSide.ContainsKey(corner.Left) && corner.InnerSide.ContainsKey(corner.Top))
                {
                    corner.RotateRight(180); // o flip + rotate / rotate + flip
                }

                for (var y = 0; y < Height; y++)
                {
                    for (var x = 0; x < Width; x++)
                    {
                        if (x != 0 || y != 0)
                        {
                            if (x > 0)
                            {
                                var previousTile = _reassembledMap[y, x - 1];
                                var nextTile = previousTile.InnerSide[previousTile.Right];
                                if (nextTile.MakeLeftSideBe(previousTile.Right))
                                {
                                    _reassembledMap[y, x] = nextTile;
                                }
                            }
                            else
                            {
                                if (y > 0)
                                {
                                    var previousTile = _reassembledMap[y - 1, x];
                                    var nextTile = previousTile.InnerSide[previousTile.Bottom];
                                    if (nextTile.MakeTopSideBe(previousTile.Bottom))
                                    {
                                        _reassembledMap[y, x] = nextTile;
                                    }
                                }
                            }
                        }
                    }
                }

                break;
            }
        }

        public Tile[,] GetReassembledMap() => _reassembledMap;

        public void Crop()
        {
            var fullMap1 = string.Empty;
            for (var y = 0; y < Height; y++)
            {
                for (var h = 0; h < 10; h++)
                {
                    for (var x = 0; x < Width; x++)
                    {
                        fullMap1 += _reassembledMap[y, x].Image[(h * 10)..((h * 10) + 10)];
                    }
                    fullMap1 += "\n";
                }
            }

            var map1 = new Tile($"Tile 9998:\n{fullMap1}", 120);
            map1.Display();


            foreach (var tile in _reassembledMap)
            {
                tile.Crop();
            }

            var fullMap = string.Empty;
            for (var y = 0; y < Height; y++)
            {
                for (var h = 0; h < 8; h++)
                {
                    for (var x = 0; x < Width; x++)
                    {
                        fullMap += _reassembledMap[y, x].Image[(h * 8)..((h * 8) + 8)];
                    }
                    fullMap += "\n";
                }
            }

            _fullMap = fullMap.Split("\n");
            var map = new Tile($"Tile 9999:\n{fullMap}", 96);

            map.FlipVertically();
            map.FlipHorizontally();
            map.RotateRight(270);
            map.Display();
        }
    }
}